name: Build & Publish

on: [push, pull_request]

jobs:
  fenbot:
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create image name
        id: image_name
        run: echo "IMAGE_NAME=ghcr.io/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')" > "$GITHUB_ENV"

      - name: Set up Docker CLI
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker images
        id: push
        uses: docker/build-push-action@v6.10.0
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.IMAGE_NAME }}:latest
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.created=${{ github.event.repository.updated_at }}
            org.opencontainers.image.version=${{ github.ref_name }}
            com.github.commit.message=${{ github.event.head_commit.message }}
            com.github.commit.author=${{ github.event.head_commit.author.name }}

      - name: Deploy to Coolify
        run: |
          curl --request GET '${{ secrets.COOLIFY_WEBHOOK }}' --header 'Authorization: Bearer ${{ secrets.COOLIFY_TOKEN }}'